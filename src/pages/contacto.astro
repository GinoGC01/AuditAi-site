---
import Layout from '../layouts/Layout.astro'
import Check from '../Icons/Check.astro';
---

<Layout title="Contacto | AuditAi" fill1="#4e197a" fill2="#4e197a">
  <main class="text-white md:px-40 md:py-6 ">
    <!-- HEADER -->

    <!-- CONTACT SECTION -->
    <section class="mt-16 w-full flex flex-col items-center text-center px-4 md:px-0">

      <h1 class="text-4xl md:text-5xl font-bold text-white">
        Hablemos de tu <span class="bg-gradient-to-r from-blue-600 to-teal-400 text-transparent bg-clip-text ">contabilidad inteligente</span>
      </h1>
      <p class="text-slate-300 mt-6 max-w-2xl">
        Completá el formulario y un especialista de AuditAi te responderá a la brevedad.
        Estamos listos para ayudarte a automatizar tareas y optimizar tu tiempo.
      </p>

      <!-- FORM -->

      <form class="mt-12 w-full max-w-2xl bg-neutral-950 py-8 px-4 rounded-2xl shadow-xl border border-slate-800 relative" id="contact-form" >

        <span id="mensaje-enviado" class="font-bold text-white rounded-2xl h-0 overflow-hidden bg-[#65a30d] flex gap-2 items-center justify-center transition-all duration-200 ">Mensaje Enviado con Exito <Check color="white"/> </span>

        <div class="mb-6 text-left">
          <label for="nombre" class="block text-slate-300 mb-2
          after:ml-0.5 after:text-red-500 after:content-['*']">Nombre completo</label>
          <input id="nombre" type="text" required
            class="w-full px-4 py-3 rounded-lg bg-zinc-900 text-white placeholder-slate-500 border border-slate-700 focus:outline-none focus:border-blue-500"
            placeholder="Ej: María López" />
        </div>

        <div class="mb-6 text-left">
          <label for="email" class="block text-slate-300 mb-2
           after:ml-0.5 after:text-red-500 after:content-['*']">Correo electrónico</label>
          <input id="email" type="email" required
            class="w-full px-4 py-3 rounded-lg bg-zinc-900 text-white placeholder-slate-500 border border-slate-700 focus:outline-none focus:border-blue-500"
            placeholder="ejemplo@correo.com" />
        </div>

        <div class="mb-6 text-left">
          <label for="mensaje" class="block text-slate-300 mb-2
           after:ml-0.5 after:text-red-500 after:content-['*']">Mensaje</label>
          <textarea id="mensaje" rows="5" required
            class="w-full px-4 py-3 rounded-lg bg-zinc-900 text-white placeholder-slate-500 border border-slate-700 focus:outline-none focus:border-blue-500 resize-none"
            placeholder="Contanos qué necesitás o cómo podemos ayudarte..."></textarea>
        </div>

        <button type="submit"
          class="w-full bg-gradient-to-r from-blue-600 to-teal-400 text-white font-semibold text-lg py-3 rounded-lg hover:opacity-90 transition-opacity cursor-pointer"
          id="submit-button">
          Enviar mensaje
        </button>
      </form>

      <!-- EXTRA INFO -->
      <div class="mt-16 text-slate-400">
        <p>¿Preferís otro canal? Escribinos al
          <a href="https://t.me/Ginoogg" target="_blank" class="text-blue-400 hover:underline">Telegram</a>
        </p>
      </div>
    </section>

  </main>
</Layout>

<script>
import { config } from './config.ts'

type FormData = {
  nombre: string
  email: string
  mensaje: string
}

const postLeadsUrl = config.postLeads
const form = document.getElementById('contact-form') as HTMLFormElement
const nombre = document.getElementById('nombre') as HTMLInputElement
const email = document.getElementById('email') as HTMLInputElement
const mensaje = document.getElementById('mensaje') as HTMLTextAreaElement
const submitButton = document.getElementById('submit-button') as HTMLButtonElement
const mensajeEnviado = document.getElementById('mensaje-enviado') as HTMLSpanElement

const sendMessage = async (data:FormData) => {
  try {
    const response = await fetch(postLeadsUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    })
    submitButton.disabled = true
    submitButton.textContent = '...Enviando'
    return response.ok
  } catch (error) {
    console.error('Error al enviar el formulario:', error)
    return false
  } finally {
    submitButton.disabled = false
    submitButton.textContent = 'Enviar mensaje'
    form.reset()
    mensajeEnviado.classList.remove('h-0', 'overflow-hidden', 'p-0')
    mensajeEnviado.classList.add('p-8', 'h-4', 'mb-[20px]')

    setTimeout(() => {
      mensajeEnviado.classList.add('h-0', 'overflow-hidden', 'p-0')
      mensajeEnviado.classList.remove('p-8', 'h-4', 'mb-[20px]')
    }, 5000)
  }
}

form.addEventListener('submit', async (e) => {
  e.preventDefault()

  const formData = {
    nombre: nombre.value,
    email: email.value,
    mensaje: mensaje.value
  }
  await sendMessage(formData)
})
</script>
